package sybil.tampa.controller;

/**
 * This Object processes the mail strip file containg Sybildat information.
 * The information from the mail strip parameter file is used to get the names of the
 * files to zip up and send to the plant.  All of the information needed to build
 * the zip file name comes from the mail strip parameters file.  
 * 
 * NOTE: If any of the files with the configured extention is not found, 
 * 			the processing will be aborted!
 * 
 * This type was generated by a SmartGuide.
 * @author Jay Morgan
 */
import java.util.zip.*;
import sybil.common.util.*;
import sybil.common.event.*;
import sybil.common.model.*;
import java.util.*;
import java.io.*;
import sybil.common.persistence.*;

public class ProcessSybildatThread extends Thread{
	private String extentions;
	private String inputDir;
	private File dirFile;
	private Vector fileFilters = new Vector();
	private String SybilDatFileSetName;
	private String newDataSetName;
	private String zipFileName;

	private String dest;
	private ZipFilePersistent zfp = null;
	private String destPlant = null;


	private String MaildatProviderName = "TCS1";
				
	public ProcessSybildatThread( MailStripContentParameters p, int fileNum)	{
		String prop;
		String w = null;
		String week = null;
		
		destPlant = p.getPlantRepresentedByFile(fileNum).toLowerCase();
		this.SybilDatFileSetName = p.getdatasetNameOfFile(fileNum);

		String s = getSybilDatType(p.getdatasetNameOfFile(fileNum));
		
		String str1 = p.getIssueNumber().trim();
		week = p.getWeekNumber();

		this.newDataSetName = new String(MaildatProviderName + str1.substring(str1.length() -2, str1.length()) + week.substring(1,2) + s);
			
		dest = p.getMagazineCode().toLowerCase()+".i"+
					p.getIssueNumber().toLowerCase()+"."+
					destPlant+"."+
					p.getSourceLabelType(fileNum).toLowerCase()+"."+
					p.getSourceProcessType(fileNum).toLowerCase()+"."+
					p.getSourceDataType(fileNum).toLowerCase()+"."+week+".zip";

		if( (prop = PropertyBroker.getProperty("CustomerDataFileOutputDirectory")) == null) {
			SybilWarningException e = new SybilWarningException(
					"ProcessSybildatThread(): CustomerDataFileOutputDirectory is not defined.");
			LogWriter.writeLog(e);
			return;
		}
		
		zipFileName = prop + dest;
		
		// initialize zip file persistance object
		zfp = new ZipFilePersistent(zipFileName);
		
		if( (inputDir = PropertyBroker.getProperty("CustomerDataFileInputDirectory")) == null) {
			SybilWarningException e = new SybilWarningException(
					"ProcessSybildatThread(): CustomerDataFileInputDirectory is not defined.");
			LogWriter.writeLog(e);
			return;
		}	
		
		dirFile = new File(inputDir);
		if( !dirFile.exists() || !dirFile.isDirectory()) {
			SybilWarningException e = new SybilWarningException(
				"ProcessSybildatThread(): "+inputDir+" does not exist or is not a directory.");
			LogWriter.writeLog(e);
			return;
		}	
	
		// Initialize sybildat filters.
		if( (extentions = PropertyBroker.getProperty("MailDatExtentions")) == null) {
			SybilWarningException e = new SybilWarningException(
					"ProcessSybildatThread(): SybilDatExtentions are not defined.");
			LogWriter.writeLog(e);
			return;
		}
		
		StringTokenizer st = new StringTokenizer( extentions, ",");
		int numEntries = st.countTokens();
		for( int i=0; i<numEntries; i++){
			fileFilters.addElement(new FileExtentionFilter(st.nextToken()));
		}	
		
		LogWriter.writeLog("Process..Thread:"+"Processing input Sybildat file set: <"+dirFile+SybilDatFileSetName+".*>");			

	}
/**
 * This method was created by a SmartGuide.
 * @return java.lang.String
 */
public String getSybilDatFileSetName( ) {
	return SybilDatFileSetName;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String
 * @param type java.lang.String
 */
public String getSybilDatType(String fileName) {


//    Takes the file name inside the mailparm and tokenizes it to get the last token.  
//    Then substrings the last token to see if the first character is and "R" or "A".
//    If it is it uses the last character in that token otherwise it uses the first 
//    character in that token. Example file name in the mailparm -- 
//    MO.I060704.CLK.SYBILDAT.OMS2.U0, the last token is "UO"


	String typecode = null;
	String firstChar = null;
	String secondChar = null;
	String lastToken = null;

	StringTokenizer stFile = new StringTokenizer(fileName, ".");
	while (stFile.hasMoreTokens()) {
		lastToken = stFile.nextToken().trim();
	}
	if (lastToken.length() >1) {
		firstChar = (lastToken.substring(0,1));
		secondChar = (lastToken.substring(1,2));
		if ((firstChar.equalsIgnoreCase("r"))	|| (firstChar.equalsIgnoreCase("a"))) {
			typecode = secondChar;
		}else {
			typecode = firstChar;
		}
	}else {
		firstChar = (lastToken.substring(0,1));
		typecode = firstChar;
	}
	
	
	return typecode.toLowerCase();
}
/**
 * This method was created by a SmartGuide.
 */
public static void main (String args[]) {
	
	MailStripContentParameters p = new MailStripContentParameters();	
	
	try {
		//PropertyBroker.load("c:\\tampaHome\\sybiltampa.ini");
		PropertyBroker.load(args[0]);
	}catch(IOException ioe) {}	

	ProcessSybildatThread sd = new ProcessSybildatThread(p, 0);

	sd.start();

	return;
}
	public void run(){
	
	File f = null;
	FileExtentionFilter fef;	
	String moveDir = null;
		
	for( int i=0; i<fileFilters.size(); i++){
			fef = (FileExtentionFilter)fileFilters.elementAt(i);		
			f = new File( dirFile, SybilDatFileSetName+fef.getExtention());
			if( f.exists()){

				try{
					zfp.addFile(f, newDataSetName+fef.getExtention());
				} catch (SybilWarningException e) {
					LogWriter.writeLog(e);
					zfp.finish();
					return;
				}		
			} 
		} 

		zfp.finish();
		return;
	}
/**
 * This method was created by a SmartGuide.
 */
public void setSybilDatFileSetName (String sybilDatFileSetName) {
	this.SybilDatFileSetName = SybilDatFileSetName;
	return;
}
}
